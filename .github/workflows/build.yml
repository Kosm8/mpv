name: build

on:
  push:
    branches:
      - master
      - ci
      - 'release/**'
    paths-ignore:
      - 'DOCS/**'
      - 'TOOLS/lua/**'
  pull_request:
    branches: [master]
    paths-ignore:
      - 'DOCS/**'
      - 'TOOLS/lua/**'

jobs:
  mingw:
    runs-on: ubuntu-22.04
    env:
      CCACHE_BASEDIR: ${{ github.workspace }}
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_MAXSIZE: 500M
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-w64-mingw32]
    steps:
      - uses: actions/checkout@v3

      - name: Get time
        id: get_time
        run: echo "timestamp=`date +%s%N`" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ matrix.target }}-${{ steps.get_time.outputs.timestamp }}
          restore-keys: ${{ matrix.target }}-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake pkg-config g++-mingw-w64 gcc-multilib python3-pip ninja-build nasm wine wine64 ccache
          sudo python3 -m pip install meson

      - name: Build libraries
        run: |
          ./ci/build-mingw64.sh
        env:
          TARGET: ${{ matrix.target }}

      - name: Build with meson
        id: build
        run: |
          ./ci/build-mingw64.sh meson pack
        env:
          TARGET: ${{ matrix.target }}

      - name: Print meson log
        if: ${{ failure() && steps.build.outcome == 'failure' }}
        run: |
          cat ./build/meson-logs/meson-log.txt

      - name: Functional test
        id: tests
        run: |
          cd artifact && wine64 ./mpv.com -v --no-config
        env:
          WINEDEBUG: '+loaddll'

      - uses: actions/upload-artifact@v3
        with:
          name: mpv-${{ matrix.target }}
          path: mpv-git-*.zip
